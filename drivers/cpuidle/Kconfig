menu "CPU Idle"

config CPU_IDLE
	bool "CPU idle PM support"
	default y if ACPI || PPC_PSERIES
	select CPU_IDLE_GOV_LADDER if (!NO_HZ && !NO_HZ_IDLE)
	select CPU_IDLE_GOV_MENU if ((NO_HZ || NO_HZ_IDLE) && !CPU_IDLE_GOV_SCHEDULED)
	help
	  CPU idle is a generic framework for supporting software-controlled
	  idle processor power management.  It includes modular cross-platform
	  governors that can be swapped during runtime.

	  If you're using an ACPI-enabled platform, you should say Y here.

if CPU_IDLE

config CPU_IDLE_MULTIPLE_DRIVERS
        bool "Support multiple cpuidle drivers"
        default n
        help
         Allows the cpuidle framework to use different drivers for each CPU.
         This is useful if you have a system with different CPU latencies and
         states. If unsure say N.

config CPU_IDLE_GOV_LADDER
	bool "Ladder governor (for periodic timer tick)"
	default y

config CPU_IDLE_GOV_MENU
	bool "Menu governor (for tickless system)"
	select CPU_IDLE_GOV_SHARED_PREDICTOR
	select CPU_IDLE_GOV_SHARED_CSTATE_LOOKUP
	default y

if SMP
config CPU_IDLE_GOV_SCHEDULED
	bool "Scheduled governor"
	select CPU_IDLE_GOV_SHARED_PREDICTOR
	select CPU_IDLE_GOV_SHARED_CSTATE_LOOKUP
	default n
	help
	 A governor that selects an idle state based on timing constraints
	 set by another part of kernel. The state selection is recorded
	 in a variable visible to other parts of the kernel so all cores
	 may be considered when making scheduling decisions.
endif

config CPU_IDLE_GOV_SHARED_PREDICTOR
	def_bool n

config CPU_IDLE_GOV_SHARED_CSTATE_LOOKUP
	def_bool n

menu "ARM CPU Idle Drivers"
depends on ARM
source "drivers/cpuidle/Kconfig.arm"
endmenu

endif

config ARCH_NEEDS_CPU_IDLE_COUPLED
	def_bool n
endmenu
