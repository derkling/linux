#define IRQ_LOCALTIMER		29
#define IRQ_LOCALWDOG		30

/*
 * Irqs
 */
#define IRQ_ARM_VEXPRESS_GIC_START	32

/*
 * ARM_VEXPRESS gic irq sources
 */
#define IRQ_VEXPRESS_WATCHDOG	(IRQ_ARM_VEXPRESS_GIC_START + 0)	/* Watchdog timer */
#define IRQ_VEXPRESS_SOFT	(IRQ_ARM_VEXPRESS_GIC_START + 1)	/* Software interrupt */
#define IRQ_VEXPRESS_TIMER0_1	(IRQ_ARM_VEXPRESS_GIC_START + 2)	/* Timer 0/1 (default timer) */
#define IRQ_VEXPRESS_TIMER2_3	(IRQ_ARM_VEXPRESS_GIC_START + 3)	/* Timer 2/3 */
#define IRQ_VEXPRESS_RTC	(IRQ_ARM_VEXPRESS_GIC_START + 4)	/* Real Time Clock */
#define IRQ_VEXPRESS_UART0	(IRQ_ARM_VEXPRESS_GIC_START + 5)	/* UART 0 on development chip */
#define IRQ_VEXPRESS_UART1	(IRQ_ARM_VEXPRESS_GIC_START + 6)	/* UART 1 on development chip */
#define IRQ_VEXPRESS_UART2	(IRQ_ARM_VEXPRESS_GIC_START + 7)	/* UART 2 on development chip */
#define IRQ_VEXPRESS_UART3	(IRQ_ARM_VEXPRESS_GIC_START + 8)	/* UART 3 on development chip */
#define IRQ_VEXPRESS_MMCI0A	(IRQ_ARM_VEXPRESS_GIC_START + 9)	/* Multimedia Card 0A */
#define IRQ_VEXPRESS_MMCI0B	(IRQ_ARM_VEXPRESS_GIC_START + 10)	/* Multimedia Card 0B */
#define IRQ_VEXPRESS_AACI	(IRQ_ARM_VEXPRESS_GIC_START + 11)	/* Audio Codec */
#define IRQ_VEXPRESS_KMI0	(IRQ_ARM_VEXPRESS_GIC_START + 12)	/* Keyboard/Mouse port 0 */
#define IRQ_VEXPRESS_KMI1	(IRQ_ARM_VEXPRESS_GIC_START + 13)	/* Keyboard/Mouse port 1 */
#define IRQ_VEXPRESS_CLCD	(IRQ_ARM_VEXPRESS_GIC_START + 14)	/* Motherboard CLCD controller */
#define IRQ_VEXPRESS_ETH	(IRQ_ARM_VEXPRESS_GIC_START + 15)	/* Ethernet controller */
#define IRQ_VEXPRESS_USB	(IRQ_ARM_VEXPRESS_GIC_START + 16)	/* USB controller */

#if defined(CONFIG_VEXPRESS_PCIE_RC_IN_FPGA)
#define IRQ_VEXPRESS_PCIE_A		(IRQ_ARM_VEXPRESS_GIC_START + 36)	/* PCI Express INTA */
#define IRQ_VEXPRESS_PCIE_B		(IRQ_ARM_VEXPRESS_GIC_START + 37)	/* PCI Express INTB */
#define IRQ_VEXPRESS_PCIE_C		(IRQ_ARM_VEXPRESS_GIC_START + 38)	/* PCI Express INTC */
#define IRQ_VEXPRESS_PCIE_D		(IRQ_ARM_VEXPRESS_GIC_START + 39)	/* PCI Express INTD */
#endif

#define IRQ_VEXPRESS_MSI_IN		(IRQ_ARM_VEXPRESS_GIC_START + 40)	/* PCI Express MSI interrupt */
#if defined(CONFIG_VEXPRESS_PCIE_RC_IN_FPGA)
#define IRQ_VEXPRESS_MSI_IN_1		(IRQ_ARM_VEXPRESS_GIC_START + 41)	/* PCI Express MSI interrupt */
#define IRQ_VEXPRESS_MSI_IN_2		(IRQ_ARM_VEXPRESS_GIC_START + 42)	/* PCI Express MSI interrupt */
#define IRQ_VEXPRESS_MSI_IN_3		(IRQ_ARM_VEXPRESS_GIC_START + 43)	/* PCI Express MSI interrupt */
#endif

#define IRQ_VE_CA9_L220_EVENT	(IRQ_ARM_VEXPRESS_GIC_START + 43)	/* L220 Cache controller combined Int */
#define IRQ_VE_CA9_CLCD		(IRQ_ARM_VEXPRESS_GIC_START + 44)	/* CA9 Tile CLCD controller */

#if !defined(CONFIG_VEXPRESS_PCIE_RC_IN_FPGA)
#define IRQ_VEXPRESS_PCIE_A		(IRQ_ARM_VEXPRESS_GIC_START + 56)	/* PCI Express INTA */
#define IRQ_VEXPRESS_PCIE_B		(IRQ_ARM_VEXPRESS_GIC_START + 57)	/* PCI Express INTB */
#define IRQ_VEXPRESS_PCIE_C		(IRQ_ARM_VEXPRESS_GIC_START + 58)	/* PCI Express INTC */
#define IRQ_VEXPRESS_PCIE_D		(IRQ_ARM_VEXPRESS_GIC_START + 59)	/* PCI Express INTD */
#endif

#define IRQ_VEXPRESS_PMU_CPU0	(IRQ_ARM_VEXPRESS_GIC_START + 60)	/* CPU PMU Interrupts */
#define IRQ_VEXPRESS_PMU_CPU1	(IRQ_ARM_VEXPRESS_GIC_START + 61)
#define IRQ_VEXPRESS_PMU_CPU2	(IRQ_ARM_VEXPRESS_GIC_START + 62)
#define IRQ_VEXPRESS_PMU_CPU3	(IRQ_ARM_VEXPRESS_GIC_START + 63)

#ifdef CONFIG_PCI_MSI
#define IRQ_VEXPRESS_MSI_0		(IRQ_ARM_VEXPRESS_GIC_START + 64)	/* first soft IRQ for decoded MSI */
#endif

#define IRQ_ARM_VEXPRESS_SMC	-1
#define IRQ_ARM_VEXPRESS_SCTL	-1

#define NR_GIC_ARM_VEXPRESS	1

#ifdef CONFIG_PCI_MSI
#if defined(CONFIG_VEXPRESS_PCIE_RC_IN_FPGA)
#define NR_MSI_IRQS_ARM_VEXPRESS	(16*4)
#else
#define NR_MSI_IRQS_ARM_VEXPRESS	16
#endif	/* CONFIG_VEXPRESS_PCIE_RC_IN_FPGA */
#endif

/*
 * Only define NR_IRQS if less than NR_IRQS_ARM_VEXPRESS
 */
#ifdef CONFIG_PCI_MSI
#define NR_IRQS_ARM_VEXPRESS		(IRQ_VEXPRESS_MSI_0 + NR_MSI_IRQS_ARM_VEXPRESS)
#else
#define NR_IRQS_ARM_VEXPRESS		(IRQ_ARM_VEXPRESS_GIC_START + 64)
#endif

#if !defined(MAX_GIC_NR) || (MAX_GIC_NR < NR_GIC_ARM_VEXPRESS)
#undef MAX_GIC_NR
#define MAX_GIC_NR		NR_GIC_ARM_VEXPRESS
#endif

#ifndef CONFIG_ARCH_VEXPRESS_LT_ELBA
#define NR_IRQS	128
#else
#define NR_IRQS 160
#endif
